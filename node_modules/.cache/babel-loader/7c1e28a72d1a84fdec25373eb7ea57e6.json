{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"elementType\", \"externalSlotProps\", \"ownerState\", \"skipResolvingSlotProps\"];\nimport useForkRef from '../useForkRef';\nimport appendOwnerState from '../appendOwnerState';\nimport mergeSlotProps from '../mergeSlotProps';\nimport resolveComponentProps from '../resolveComponentProps';\n/**\n * @ignore - do not document.\n * Builds the props to be passed into the slot of an unstyled component.\n * It merges the internal props of the component with the ones supplied by the user, allowing to customize the behavior.\n * If the slot component is not a host component, it also merges in the `ownerState`.\n *\n * @param parameters.getSlotProps - A function that returns the props to be passed to the slot component.\n */\n\nfunction useSlotProps(parameters) {\n  var _parameters$additiona;\n\n  var elementType = parameters.elementType,\n      externalSlotProps = parameters.externalSlotProps,\n      ownerState = parameters.ownerState,\n      _parameters$skipResol = parameters.skipResolvingSlotProps,\n      skipResolvingSlotProps = _parameters$skipResol === void 0 ? false : _parameters$skipResol,\n      rest = _objectWithoutPropertiesLoose(parameters, _excluded);\n\n  var resolvedComponentsProps = skipResolvingSlotProps ? {} : resolveComponentProps(externalSlotProps, ownerState);\n\n  var _mergeSlotProps = mergeSlotProps(_extends({}, rest, {\n    externalSlotProps: resolvedComponentsProps\n  })),\n      mergedProps = _mergeSlotProps.props,\n      internalRef = _mergeSlotProps.internalRef;\n\n  var ref = useForkRef(internalRef, resolvedComponentsProps == null ? void 0 : resolvedComponentsProps.ref, (_parameters$additiona = parameters.additionalProps) == null ? void 0 : _parameters$additiona.ref);\n  var props = appendOwnerState(elementType, _extends({}, mergedProps, {\n    ref: ref\n  }), ownerState);\n  return props;\n}\n\nexport default useSlotProps;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","useForkRef","appendOwnerState","mergeSlotProps","resolveComponentProps","useSlotProps","parameters","_parameters$additiona","elementType","externalSlotProps","ownerState","skipResolvingSlotProps","rest","resolvedComponentsProps","mergedProps","props","internalRef","ref","additionalProps"],"sources":["D:/task/node_modules/@mui/utils/esm/useSlotProps/useSlotProps.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"elementType\", \"externalSlotProps\", \"ownerState\", \"skipResolvingSlotProps\"];\nimport useForkRef from '../useForkRef';\nimport appendOwnerState from '../appendOwnerState';\nimport mergeSlotProps from '../mergeSlotProps';\nimport resolveComponentProps from '../resolveComponentProps';\n/**\n * @ignore - do not document.\n * Builds the props to be passed into the slot of an unstyled component.\n * It merges the internal props of the component with the ones supplied by the user, allowing to customize the behavior.\n * If the slot component is not a host component, it also merges in the `ownerState`.\n *\n * @param parameters.getSlotProps - A function that returns the props to be passed to the slot component.\n */\nfunction useSlotProps(parameters) {\n  var _parameters$additiona;\n  const {\n      elementType,\n      externalSlotProps,\n      ownerState,\n      skipResolvingSlotProps = false\n    } = parameters,\n    rest = _objectWithoutPropertiesLoose(parameters, _excluded);\n  const resolvedComponentsProps = skipResolvingSlotProps ? {} : resolveComponentProps(externalSlotProps, ownerState);\n  const {\n    props: mergedProps,\n    internalRef\n  } = mergeSlotProps(_extends({}, rest, {\n    externalSlotProps: resolvedComponentsProps\n  }));\n  const ref = useForkRef(internalRef, resolvedComponentsProps == null ? void 0 : resolvedComponentsProps.ref, (_parameters$additiona = parameters.additionalProps) == null ? void 0 : _parameters$additiona.ref);\n  const props = appendOwnerState(elementType, _extends({}, mergedProps, {\n    ref\n  }), ownerState);\n  return props;\n}\nexport default useSlotProps;"],"mappings":"AAAA;;AAEA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,IAAMC,SAAS,GAAG,CAAC,aAAD,EAAgB,mBAAhB,EAAqC,YAArC,EAAmD,wBAAnD,CAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,qBAAP,MAAkC,0BAAlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,YAAT,CAAsBC,UAAtB,EAAkC;EAChC,IAAIC,qBAAJ;;EACA,IACIC,WADJ,GAKMF,UALN,CACIE,WADJ;EAAA,IAEIC,iBAFJ,GAKMH,UALN,CAEIG,iBAFJ;EAAA,IAGIC,UAHJ,GAKMJ,UALN,CAGII,UAHJ;EAAA,4BAKMJ,UALN,CAIIK,sBAJJ;EAAA,IAIIA,sBAJJ,sCAI6B,KAJ7B;EAAA,IAMEC,IANF,GAMSb,6BAA6B,CAACO,UAAD,EAAaN,SAAb,CANtC;;EAOA,IAAMa,uBAAuB,GAAGF,sBAAsB,GAAG,EAAH,GAAQP,qBAAqB,CAACK,iBAAD,EAAoBC,UAApB,CAAnF;;EACA,sBAGIP,cAAc,CAACL,QAAQ,CAAC,EAAD,EAAKc,IAAL,EAAW;IACpCH,iBAAiB,EAAEI;EADiB,CAAX,CAAT,CAHlB;EAAA,IACSC,WADT,mBACEC,KADF;EAAA,IAEEC,WAFF,mBAEEA,WAFF;;EAMA,IAAMC,GAAG,GAAGhB,UAAU,CAACe,WAAD,EAAcH,uBAAuB,IAAI,IAA3B,GAAkC,KAAK,CAAvC,GAA2CA,uBAAuB,CAACI,GAAjF,EAAsF,CAACV,qBAAqB,GAAGD,UAAU,CAACY,eAApC,KAAwD,IAAxD,GAA+D,KAAK,CAApE,GAAwEX,qBAAqB,CAACU,GAApL,CAAtB;EACA,IAAMF,KAAK,GAAGb,gBAAgB,CAACM,WAAD,EAAcV,QAAQ,CAAC,EAAD,EAAKgB,WAAL,EAAkB;IACpEG,GAAG,EAAHA;EADoE,CAAlB,CAAtB,EAE1BP,UAF0B,CAA9B;EAGA,OAAOK,KAAP;AACD;;AACD,eAAeV,YAAf"},"metadata":{},"sourceType":"module"}